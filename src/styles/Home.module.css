.color_explanation {
  margin-top: 10px; /* ロゴと説明の間にマージンを追加 */
  display: flex;
  align-items: center;
  padding-left: 10px;
  font-weight: bold;
}

.color_box {
  display: flex;
  align-items: center;
  margin-right: 0px; /* 各色ごとの説明の右にマージンを追加 */
  margin-left: 30px;
  display: flex;
  align-items: center;
}

.small_color_box {
  font-weight: bold;
  width: 20px;
  height: 20px;
  margin-right: 0px;
}

.small_color_box_no_use {
  background-color: #888282;
}
.small_color_box_crowded {
  background-color: #e55757;
}
.small_color_box_little_crowded {
  background-color: #fbd825;
}
.small_color_box_empty {
  background-color: #2edc69;
}

.color_explanation_item {
  font-size: 20px;
  margin-left: 5px; /* 要素間の左側のマージンを調整（適宜変更） */
}

.situation {
  font-size: 20px;
  margin-left: 30px;
}

.list-with-image {
  display: flex;
  align-items: flex-start;
  margin-top: 20px; /* リストと画像の間隔を調整 */
}

.floor-table-container {
  margin-right: 20px;
  margin-left: 0;
}

.floa-table {
  /* セルの間隔 */
  border-collapse: separate;
  border-spacing: 80px 10px;
  padding-left: 0px;
}

.floa-number {
  text-align: left;
  font-size: 32px;
  padding-left: 0;
  margin-left: 0;
  /* border-bottom: solid black; */
}

.floor-text {
  margin-right: 5px; /* floor とアイコンの間に適切なスペースを設ける */
}

/* Enable hover only on non-touch devices */
@media (hover: hover) and (pointer: fine) {
  .card:hover {
    background: rgba(var(--card-rgb), 0.1);
    border: 1px solid rgba(var(--card-border-rgb), 0.15);
  }

  .card:hover span {
    transform: translateX(4px);
  }
}

@media (prefers-reduced-motion) {
  .card:hover span {
    transform: none;
  }
}

/* Mobile */
@media (max-width: 700px) {
  .content {
    padding: 4rem;
  }

  .grid {
    grid-template-columns: 1fr;
    margin-bottom: 120px;
    max-width: 320px;
    text-align: center;
  }

  .card {
    padding: 1rem 2.5rem;
  }

  .card h2 {
    margin-bottom: 0.5rem;
  }

  .center {
    padding: 8rem 0 6rem;
  }

  .center::before {
    transform: none;
    height: 300px;
  }

  .description {
    font-size: 0.8rem;
  }

  .description a {
    padding: 1rem;
  }

  .description p,
  .description div {
    display: flex;
    justify-content: center;
    position: fixed;
    width: 100%;
  }

  .description p {
    align-items: center;
    inset: 0 0 auto;
    padding: 2rem 1rem 1.4rem;
    border-radius: 0;
    border: none;
    border-bottom: 1px solid rgba(var(--callout-border-rgb), 0.25);
    background: linear-gradient(
      to bottom,
      rgba(var(--background-start-rgb), 1),
      rgba(var(--callout-rgb), 0.5)
    );
    background-clip: padding-box;
    backdrop-filter: blur(24px);
  }

  .description div {
    align-items: flex-end;
    pointer-events: none;
    inset: auto 0 0;
    padding: 2rem;
    height: 200px;
    background: linear-gradient(
      to bottom,
      transparent 0%,
      rgb(var(--background-end-rgb)) 40%
    );
    z-index: 1;
  }
}

@media (max-width: 430px) {
  .color_explanation {
    margin-top: 10px; /* ロゴと説明の間にマージンを追加 */
  display: flex;
  align-items: center;
  padding-left: 5%;
  font-weight: bold;
  }

  .color_box{
    display: flex;
    align-items: center;
    margin-right: 0px; /* 各色ごとの説明の右にマージンを追加 */
    margin-left: 10px;
    display: flex;
    align-items: center;
  }

  .small_color_box {
    font-weight: bold;
    width: 5px;
    height: 5px;
    margin-right: 0px;
  }

  .small_color_box_no_use {
    background-color: #888282;
  }

  .small_color_box_crowded {
    background-color: #e55757;
  }

  .small_color_box_little_crowded {
    background-color: #fbd825;
  }

  .small_color_box_empty {
    background-color: #2edc69;
  }

  .color_explanation_item {
    font-size: 10px;
    margin-left: 2.5px; /* 要素間の左側のマージンを調整（適宜変更） */
  }


}

/* Tablet and Smaller Desktop */
@media (min-width: 701px) and (max-width: 1120px) {
  .grid {
    grid-template-columns: repeat(2, 50%);
  }
}

@media (prefers-color-scheme: dark) {
  .vercelLogo {
    filter: invert(1);
  }

  .logo {
    filter: invert(1) drop-shadow(0 0 0.3rem #ffffff70);
  }
}

@keyframes rotate {
  from {
    transform: rotate(360deg);
  }
  to {
    transform: rotate(0deg);
  }
}
